\(sf) {
lapply(
sort(unique(species[[sf]]$scientificName)),
\(sp) {
# sf <- "Muricoidea"
# sp <- "Muricopsis linealba"
print(sf)
print(sp)
# Isolement des stations dans lesquelles l'espèce d'intérête à été trouvée
stn_sp <- species[[sf]] %>%
filter(scientificName == sp) %>%
select(STATION = collectStation) %>%
unlist(use.names = F) %>%
unique()
bool1 <- if (length(stn_sp) == 1) {
stn_sp %in% tb_na$STATION_REF
} else {
FALSE
}
if (length(stn_sp) == 1 & bool1) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = NA,
CD_HAB_maj2 = NA,
CD_HAB_etg  = NA,
CD_HAB_sub  = NA,
CD_HAB_geo  = NA
)
return(row_sp)
} else {
# table de l'espèce filtrée des stations sans intitulés
tb_sp <- tb %>%
filter(STATION %in% stn_sp) %>%
filter(TAXON == toupper(sf)) %>%
filter(!is.na(LB_CODE)) %>%
filter(!duplicated(.))
# Attribution des poids à chaque habitat selon le nombre d'habitats contenu
# dans chaque station
poids_stations <- round(
1/(
tb_sp %>%
group_by(STATION) %>%
summarize(STATION = n())
),
2
)
tb_poids <- tb_sp$STATION %>%
unique() %>%
sort() %>%
cbind(poids = poids_stations)
names(tb_poids) <- c("STATION", "poids")
tb_sp <- tb_sp %>% left_join(tb_poids)
if (nrow(tb_sp) == 1) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = tb_sp$CD_HAB,
CD_HAB_maj2 = NA,
CD_HAB_etg  = tb_sp$CD_HAB_etg,
CD_HAB_sub  = tb_sp$CD_HAB_sub,
CD_HAB_geo  = tb_sp$CD_HAB_geo
)
return(row_sp)
} else if (nrow(tb_sp) == 2) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = paste(unique(tb_sp$CD_HAB), collapse = "/"),
CD_HAB_maj2 = NA,
CD_HAB_etg  = paste(unique(tb_sp$CD_HAB_etg), collapse = "/"),
CD_HAB_sub  = paste(unique(tb_sp$CD_HAB_sub), collapse = "/"),
CD_HAB_geo  = paste(unique(tb_sp$CD_HAB_geo), collapse = "/")
)
return(row_sp)
} else {
# habitat le plus fréquent, deuxième habitat le plus fréquent
tt <- tb_sp %>%
select(CD_HAB, poids) %>%
group_by(CD_HAB) %>%
summarise(somme = sum(poids))
tt <- tt[order(tt$somme, decreasing = T), ]
# Sélection des fréquences les plus importantes
tt1 <- tt %>% filter(somme == max(tt$somme))
tt2 <- tt %>%
filter(somme != max(tt$somme)) %>%
filter(., somme == max(.$somme))
hab_freq_1 <- if (nrow(tt1) > 1) {
paste(unique(tt1$CD_HAB), collapse = "/")
} else {
tt1$CD_HAB
}
hab_freq_2 <- if (nrow(tt2) > 0) {
if (nrow(tt2) > 0) {
paste(unique(tt2$CD_HAB), collapse = "/")
} else if (nrow(tt2) > 1) {
tt2$CD_HAB
}
} else {
NA
}
# Étage, Étage x Substrat et Étage x substrat x géomorphologie majoritaires
f <- tb_sp$CD_HAB_etg
v <- c()
clmns <- c("CD_HAB_etg", "CD_HAB_sub", "CD_HAB_geo")
for (i in seq_along(clmns)) {
clmn0 <- if (i == 1) { clmns[[i]] } else { clmns[[i - 1]] }
clmn <- clmns[[i]]
# Table cd_hab, prévalence et effectif de chaque cd_hab
tt <- tb_sp %>%
filter(get(clmn0) %in% f) %>%
select(all_of(c(clmn, "poids"))) %>%
group_by(get(clmn)) %>%
summarise(somme = sum(poids), effectif = n())
tt <- tt[order(tt$somme, decreasing = T), ]
names(tt)[1] <- clmn
# Y a-t-il au moins une catégorie au-dessus de 5 d'effectif ?
bool5 <- sum(tt$effectif >= 5) > 0
cd_hab_maj <- if (nrow(tt) == 1) {
tt[1]
} else if (nrow(tt) != 1 & !bool5) {
tt[1, 1]
} else {
tf <- tt %>% filter(effectif >= 5)
print(tf)
cd_hab_maj <- if (nrow(tf) == 1) {
tf[[clmn]]
} else {
tf$freq <- (tf$somme/sum(tf$somme))*100
print(tf)
res <- chisq.test(tf$freq)
tf[[clmn]][which.max(res$residuals)]
}
}
f <- cd_hab_maj
v <- c(v, cd_hab_maj)
}
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = hab_freq_1,
CD_HAB_maj2 = hab_freq_2,
CD_HAB_etg  = v[[1]],
CD_HAB_sub  = v[[2]],
CD_HAB_geo  = v[[3]]
)
return(row_sp)
}
}
})
})
names(R) <- names(species)
TB <- lapply(
names(R),
\(n) {
l <- R[[n]]
nn <- species[[n]] %>%
select(scientificName) %>%
unlist() %>%
unique() %>%
sort()
cbind(scientificName = nn, do.call(rbind, l))
}
)
names(TB) <- names(species)
TB$Muricoidea
TB$Muricoidea
# Problème d'actualisation des noms scientifiques
# à changer plus tôt dans les scripts?
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)]
# Problème d'actualisation des noms scientifiques
# à changer plus tôt dans les scripts?
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)] <-
c(
"Coralliophila salebrosa",
"Siratus consuelae",
"Muricopsis corallina",
"Muricopsis linealba",
"Typhina pallida",
"Typhina lamyi"
)
# Ajout des habitats ----
hab <- read.csv(here("data", "raw", "hab") %>%
list.files(pattern = "muricoidea.+cd_hab", full.names = T))
hab <- hab %>%
select(
scientificName,
CD_HAB_main = CD_HAB_maj1,
CD_HAB_tid  = CD_HAB_etg,
CD_HAB_sub,
CD_HAB_geo
) %>%
filter(scientificName %in% mur$scientificName)
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)]
hab$scientificName[which(!hab$scientificName %in% mur$scientificName)]
# Ajout des habitats ----
hab <- read.csv(here("data", "raw", "hab") %>%
list.files(pattern = "muricoidea.+cd_hab", full.names = T))
hab <- hab %>%
select(
scientificName,
CD_HAB_main = CD_HAB_maj1,
CD_HAB_tid  = CD_HAB_etg,
CD_HAB_sub,
CD_HAB_geo
) %>%
filter(scientificName %in% mur$scientificName)
hab
View(hab)
# sf <- "Muricoidea"
sp <- "Cytharomorula grayi"
print(sf)
print(sp)
# Isolement des stations dans lesquelles l'espèce d'intérête à été trouvée
stn_sp <- species[[sf]] %>%
filter(scientificName == sp) %>%
select(STATION = collectStation) %>%
unlist(use.names = F) %>%
unique()
stn_sp
bool1 <- if (length(stn_sp) == 1) {
stn_sp %in% tb_na$STATION_REF
} else {
FALSE
}
if (length(stn_sp) == 1 & bool1) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = NA,
CD_HAB_maj2 = NA,
CD_HAB_etg  = NA,
CD_HAB_sub  = NA,
CD_HAB_geo  = NA
)
return(row_sp)
} else {
# table de l'espèce filtrée des stations sans intitulés
tb_sp <- tb %>%
filter(STATION %in% stn_sp) %>%
filter(TAXON == toupper(sf)) %>%
filter(!is.na(LB_CODE)) %>%
filter(!duplicated(.))
# Attribution des poids à chaque habitat selon le nombre d'habitats contenu
# dans chaque station
poids_stations <- round(
1/(
tb_sp %>%
group_by(STATION) %>%
summarize(STATION = n())
),
2
)
tb_poids <- tb_sp$STATION %>%
unique() %>%
sort() %>%
cbind(poids = poids_stations)
names(tb_poids) <- c("STATION", "poids")
tb_sp <- tb_sp %>% left_join(tb_poids)
if (nrow(tb_sp) == 1) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = tb_sp$CD_HAB,
CD_HAB_maj2 = NA,
CD_HAB_etg  = tb_sp$CD_HAB_etg,
CD_HAB_sub  = tb_sp$CD_HAB_sub,
CD_HAB_geo  = tb_sp$CD_HAB_geo
)
return(row_sp)
} else if (nrow(tb_sp) == 2) {
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = paste(unique(tb_sp$CD_HAB), collapse = "/"),
CD_HAB_maj2 = NA,
CD_HAB_etg  = paste(unique(tb_sp$CD_HAB_etg), collapse = "/"),
CD_HAB_sub  = paste(unique(tb_sp$CD_HAB_sub), collapse = "/"),
CD_HAB_geo  = paste(unique(tb_sp$CD_HAB_geo), collapse = "/")
)
return(row_sp)
} else {
# habitat le plus fréquent, deuxième habitat le plus fréquent
tt <- tb_sp %>%
select(CD_HAB, poids) %>%
group_by(CD_HAB) %>%
summarise(somme = sum(poids))
tt <- tt[order(tt$somme, decreasing = T), ]
# Sélection des fréquences les plus importantes
tt1 <- tt %>% filter(somme == max(tt$somme))
tt2 <- tt %>%
filter(somme != max(tt$somme)) %>%
filter(., somme == max(.$somme))
hab_freq_1 <- if (nrow(tt1) > 1) {
paste(unique(tt1$CD_HAB), collapse = "/")
} else {
tt1$CD_HAB
}
hab_freq_2 <- if (nrow(tt2) > 0) {
if (nrow(tt2) > 0) {
paste(unique(tt2$CD_HAB), collapse = "/")
} else if (nrow(tt2) > 1) {
tt2$CD_HAB
}
} else {
NA
}
# Étage, Étage x Substrat et Étage x substrat x géomorphologie majoritaires
f <- tb_sp$CD_HAB_etg
v <- c()
clmns <- c("CD_HAB_etg", "CD_HAB_sub", "CD_HAB_geo")
for (i in seq_along(clmns)) {
clmn0 <- if (i == 1) { clmns[[i]] } else { clmns[[i - 1]] }
clmn <- clmns[[i]]
# Table cd_hab, prévalence et effectif de chaque cd_hab
tt <- tb_sp %>%
filter(get(clmn0) %in% f) %>%
select(all_of(c(clmn, "poids"))) %>%
group_by(get(clmn)) %>%
summarise(somme = sum(poids), effectif = n())
tt <- tt[order(tt$somme, decreasing = T), ]
names(tt)[1] <- clmn
# Y a-t-il au moins une catégorie au-dessus de 5 d'effectif ?
bool5 <- sum(tt$effectif >= 5) > 0
cd_hab_maj <- if (nrow(tt) == 1) {
tt[1]
} else if (nrow(tt) != 1 & !bool5) {
tt[1, 1]
} else {
tf <- tt %>% filter(effectif >= 5)
print(tf)
cd_hab_maj <- if (nrow(tf) == 1) {
tf[[clmn]]
} else {
tf$freq <- (tf$somme/sum(tf$somme))*100
print(tf)
res <- chisq.test(tf$freq)
tf[[clmn]][which.max(res$residuals)]
}
}
f <- cd_hab_maj
v <- c(v, cd_hab_maj)
}
# Ligne finale pour l'espèce
row_sp <- c(
CD_HAB_maj1 = hab_freq_1,
CD_HAB_maj2 = hab_freq_2,
CD_HAB_etg  = v[[1]],
CD_HAB_sub  = v[[2]],
CD_HAB_geo  = v[[3]]
)
return(row_sp)
}
}
bool1
stn_sp %in% tb_na$STATION_REF
length(stn_sp) == 1
names(mur)
dim(hab)
names(hab)
identical(hab$scientificName, mur$scientificName)
identical(sort(hab$scientificName), sort(mur$scientificName))
hab <- hab[order(mur$scientificName), "scientificName"]
hab
order(mur$scientificName)
mur$scientificName
# Ajout des habitats ----
hab <- read.csv(here("data", "raw", "hab") %>%
list.files(pattern = "muricoidea.+cd_hab", full.names = T))
hab <- hab %>%
select(
scientificName,
CD_HAB_main = CD_HAB_maj1,
CD_HAB_tid  = CD_HAB_etg,
CD_HAB_sub,
CD_HAB_geo
) %>%
filter(scientificName %in% mur$scientificName)
hab <- hab[order(hab$scientificName), ]
identical(hab$scientificName, mur$scientificName)
dim(hab)
dim(mur)
identical(hab$scientificName, mur$scientificName)
hab$scientificName
mur$scientificName
hab <- hab[order(hab$scientificName), ]
mur <- mur[order(mur$scientificName), ]
identical(hab$scientificName, mur$scientificName)
names(mur)
mur <- mur[, -c(13:15)]
dim(hab)
r <- mur %>%
cbind(hab[,-1])
names(r)
mur <- mur %>%
cbind(hab[,-1]) %>%
select(., all_of(names(.)[c(1:12, 70:ncol(.), 13:69)]))
View(mur)
# makefile
source(here::here("scripts", "boot.R"))
# Traits ----
source(here("scripts", "modification_table_traits.R"))
source(here("scripts", "table_station_habitat.R"))
# makefile
source(here::here("scripts", "boot.R"))
# Habitats ----
source(here("scripts", "table_station_habitat.R"))
source(here("scripts", "habitat_majoritaire_cdhab.R"))
source(here("scripts", "habitat_majoritaire_lbcode.R"))
# Traits ----
source(here("scripts", "modification_table_traits.R"))
# 2023-10-18 : Discussion avec Juliette
mur <- tr$Muricoidea
names(mur)[which(names(mur) == "zone_of_description")] <- "type_locality"
names(mur)[which(names(mur) == "interaction")] <- "interaction_type"
mur <- mur %>%
add_column(interaction_target = NA, .after = "interaction_type")
names(mur)[28:36] <- c(
# Measures taken from the ventral view
# Except for sic_mean taken in lateral view
# Heights (Vertical lengths)
"sh_mean",   # Shell Height
"lwh_mean",  # Last Whorl Height
"asih_mean", # Aperture & Siphonal Identation Height
"sih_mean",  # Siphonal Identation Height
# Widths (Horizontal lengths)
"aw_mean",   # Aperture Width
"sw_mean",   # Shell Width
# Angles
"sic_mean",  # Siphonal Identation Curvature [Lateral View]
"aa_mean",   # Apical Angle
"aao_mean"   # Apical Angle with Ornamentations
)
# ajout des écarts-types + nombre de spécimens ----
mur <- mur[, -c(28:36)]
mur <- mur %>%
cbind(mur_mesures) %>%
select(., all_of(names(.)[c(1:27, 55:ncol(.), 28:53)]))
# Problème d'actualisation des noms scientifiques
# à changer plus tôt dans les scripts?
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)] <-
c(
"Coralliophila salebrosa",
"Siratus consuelae",
"Muricopsis corallina",
"Muricopsis linealba",
"Typhina pallida",
"Typhina lamyi"
)
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)]
mur$scientificName %>% unique() %>% sort
# modifications manuelles tables de traits de vie ----
# 2023-10-18 : Discussion avec Juliette
mur <- tr$Muricoidea
names(mur)[which(names(mur) == "zone_of_description")] <- "type_locality"
names(mur)[which(names(mur) == "interaction")] <- "interaction_type"
mur <- mur %>%
add_column(interaction_target = NA, .after = "interaction_type")
names(mur)[28:36] <- c(
# Measures taken from the ventral view
# Except for sic_mean taken in lateral view
# Heights (Vertical lengths)
"sh_mean",   # Shell Height
"lwh_mean",  # Last Whorl Height
"asih_mean", # Aperture & Siphonal Identation Height
"sih_mean",  # Siphonal Identation Height
# Widths (Horizontal lengths)
"aw_mean",   # Aperture Width
"sw_mean",   # Shell Width
# Angles
"sic_mean",  # Siphonal Identation Curvature [Lateral View]
"aa_mean",   # Apical Angle
"aao_mean"   # Apical Angle with Ornamentations
)
# ajout des écarts-types + nombre de spécimens ----
mur <- mur[, -c(28:36)]
mur <- mur %>%
cbind(mur_mesures) %>%
select(., all_of(names(.)[c(1:27, 55:ncol(.), 28:53)]))
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)]
mur$scientificName
hab$scientificName
# Ajout des habitats ----
hab <- read.csv(here("data", "raw", "hab") %>%
list.files(pattern = "muricoidea.+cd_hab", full.names = T))
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)]
# Problème d'actualisation des noms scientifiques
# à changer plus tôt dans les scripts?
mur$scientificName[which(!mur$scientificName %in% hab$scientificName)] <-
c(
"Coralliophila salebrosa",
"Siratus consuelae",
"Muricopsis corallina",
"Muricopsis linealba",
"Typhina pallida",
"Typhina lamyi"
)
hab <- hab %>%
select(
scientificName,
CD_HAB_main = CD_HAB_maj1,
CD_HAB_tid  = CD_HAB_etg,
CD_HAB_sub,
CD_HAB_geo
) %>%
filter(scientificName %in% mur$scientificName)
hab <- hab[order(hab$scientificName), ]
mur <- mur[order(mur$scientificName), ]
mur <- mur[, -c(13:15)]
mur <- mur %>%
cbind(hab[,-1]) %>%
select(., all_of(names(.)[c(1:12, 70:ncol(.), 13:69)]))
list.files(here("data", "raw", "traits"), full.names = T)
# sauvegarde ----
write.csv(
mur,
here("data", "tidy", "traits", "traits_database_muricidae_martinique.csv"),
row.names = F
)
