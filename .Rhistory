filter(is.na(CD_HAB)) %>%
filter(!duplicated(.))
View(cc_nona)
View(cc_na)
lb
# Anciences codes et nouveaux codes habitats (LB_CODE)
lb <- read_csv(
here("data", "raw", "hab", "typo_martinique_mer_70_intitule_vi_vf_jd.csv"),
show_col_types = F
) %>%
select(LB_CODEi = `Code initial`, LB_CODE = `Code finale`)
# Import de la correspondance stations / habitats
cc <- read.csv(
here("data", "raw", "hab", "correspondance_station_hab.csv"),
# show_col_types = F,
sep = ";"
) %>%
select(LB_CODEi = Code_habitat, STATION_REF)
# Ajout des correspondances nouveau (LB_CODE) et anciens (LB_CODEi) intitulés
hab2 <- hab %>%
left_join(lb) %>%
select(1:4, 28, everything())
# Ajout des correspondances habitat / nouveaux intitulés et CD_HAB
# par correspondance avec les anciens intitulés (LB_CODEi)
cc2 <- cc %>%
left_join(
hab2 %>% select(LB_CODEi, LB_CODE, CD_HAB)
)
cc_nona <- cc2 %>%
filter(!is.na(CD_HAB))
cc_na <- cc2 %>%
filter(is.na(CD_HAB)) %>%
filter(!duplicated(.))
dim(cc_na)
View(cc_na)
unique(cc_na$LB_CODEi)
cc_na <- cc2 %>%
filter(is.na(CD_HAB)) %>%
filter(!duplicated(.))
dim(cc_na)
# Des anciens intitulés n'ont pas de correspondance avec de nouveaux intitulés
cc_nona <- cc2 %>%
filter(!is.na(CD_HAB))
cc_na <- cc2 %>%
filter(is.na(CD_HAB)) %>%
filter(!duplicated(.))
unique(cc_na$LB_CODEi)
# Correspondance avec stations de collecte Majo/Muri
tb_majo <- tibble(
TAXON = "MAJOIDEA",
STATION = unique(species$Majoidea$collectStation)
)
tb_muri <- tibble(
TAXON = "MURICOIDEA",
STATION = unique(species$Muricoidea$collectStation)
)
tb <- rbind(tb_majo, tb_muri)
tb
# Ajout des correspondances stations de références puis intitulés/CD_HAB
tb <- tb %>% left_join(stn_ref) %>% left_join(cc_nona)
# Ajout des correspondances stations de références puis intitulés/CD_HAB
tb <- tb %>%
left_join(stn_ref) %>%
left_join(cc_nona)
tb
#
tb_na <- tb %>%
filter(is.na(CD_HAB)) %>%
select(-TAXON) %>%
filter(!duplicated(.))
dim(tb_na)
View(tb_na)
dim(tb)
View(tb)
unique(tb_na$STATION_REF)
unique(tb_na$STATION_REF) %>% length()
length(unique(tb_na$STATION))
length(unique(tb_na$STATION_REF))
# cas d'étude
mitfor <- species$Majoidea %>%
filter(scientificName == "Mithraculus forceps") %>%
select(STATION = collectStation) %>%
unlist(use.names = F) %>%
unique()
mitfor
tb_mitfor <- tb %>%
filter(STATION %in% mitfor) %>%
filter(TAXON == "MAJOIDEA") %>%
filter(!is.na(LB_CODE)) %>%
filter(!duplicated(.))
tb_mitfor
tb_mitfor <- tb %>%
filter(STATION %in% mitfor) %>%
filter(TAXON == "MAJOIDEA") %>%
filter(!is.na(LB_CODE)) %>%
filter(!duplicated(.))
tb_mitfor <- tb_mitfor %>%
separate(LB_CODE, c("etage_substrat", "geomor_peuple"), sep = "-") %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
) %>%
select(1:4, 9, 10, 6:8)
names(tb)
cc_nona
View(cc_nona)
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
separate(LB_CODE, c("etage_substrat", "geomor_peuple"), sep = "-") %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
)
View(hs)
names(hs)
View(hs)
tb_mitfor <- tb_mitfor %>%
separate(
LB_CODE, c("etage_substrat", "geomor_peuple"), sep = "-", remove = F
) %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
) %>%
select(1:4, 9, 10, 6:8)
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
separate(
LB_CODE, c("etage_substrat", "geomor_peuple"), sep = "-", remove = F
) %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
) %>%
select()
View(hs)
hs
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
mutate(X = LB_CODE) %>%
separate(
X, c("etage_substrat", "geomor_peuple"), sep = "-"
) %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
) %>%
select()
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
mutate(X = LB_CODE) %>%
separate(
X, c("etage_substrat", "geomor_peuple"), sep = "-"
) %>%
separate(., geomor_peuple, c("geomor", "peuple"), sep = "\\.") %>%
mutate(
.,
etage = substr(etage_substrat, 1, 1),
substrat = substr(etage_substrat, 2, 2)
)
View(hs)
cc_nona %>%
# mutate(X = LB_CODE) %>%
mutate(
etage_substrat_geomor = str_split("-", LB_CODE)[[1]],
etage_substrat = str_split(".", LB_CODE)[[1]]
)
?str_split
cc_nona %>%
# mutate(X = LB_CODE) %>%
mutate(
etage_substrat_geomor = str_split(LB_CODE, "-")[[1]],
etage_substrat = str_split(LB_CODE, ".")[[1]]
)
str_split("C2-321.7", "-")
str_split("C2-321.7", "-")[[1]]
str_split("C2-321.7", "-")[[1]][[1]]
cc_nona %>%
# mutate(X = LB_CODE) %>%
mutate(
etage_substrat_geomor = str_split(LB_CODE, "-")[[1]][[1]],
etage_substrat = str_split(LB_CODE, "\\.")[[1]][[1]]
)
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
# mutate(X = LB_CODE) %>%
mutate(
etage_substrat_geomor = str_split(LB_CODE, "\\.")[[1]][[1]],
etage_substrat = str_split(LB_CODE, "-")[[1]][[1]],
etage = substr(LB_CODE, 1, 1)
)
hs
str_split(cc_nona$LB_CODE, "-")
str_split(cc_nona$LB_CODE, "-")[[1]][[1]]
str_split(cc_nona$LB_CODE, "-") %>% lapply(pluck, 1)
str_split(cc_nona$LB_CODE, "-") %>% lapply(pluck, 1) %>% unlist()
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
# mutate(X = LB_CODE) %>%
mutate(
etage_substrat_geomor = str_split(LB_CODE, "\\.") %>% lapply(pluck, 1) %>% unlist(),
etage_substrat = str_split(LB_CODE, "-") %>% lapply(pluck, 1) %>% unlist(),
etage = substr(LB_CODE, 1, 1)
)
hs
# séparation des LB_CODE en différents niveaux de l'habitat
hs <- cc_nona %>%
mutate(
LB_CODE_geo = str_split(LB_CODE, "\\.") %>% lapply(pluck, 1) %>% unlist(),
LB_CODE_sub = str_split(LB_CODE, "-") %>% lapply(pluck, 1) %>% unlist(),
LB_CODE_etg = substr(LB_CODE, 1, 1)
)
# Import de HABREF
habref <- read_csv(
here("data", "raw", "hab", "HABREF_70.csv"),
show_col_types = F
)
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv")
)
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv"),
sep = ";"
)
View(habref)
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv"),
sep = ";"
) %>%
filter(CD_TYPO == "108") # Identifiant des habitats de Martinique
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv"),
sep = ";"
)
names(hs)
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")]
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")] %>% head()
names(habref)
l <- hs$LB_CODE_geo
l
habref$LB_CODE
which(habref$LB_CODE %in% l)
l
unique(l)
unique(l) %>% length()
which(habref$LB_CODE %in% l)
which(habref$LB_CODE %in% l) %>% length()
habref$LB_CODE[which(habref$LB_CODE %in% l)]
habref$CD_HAB[which(habref$LB_CODE %in% l)]
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) { habref$CD_HAB[which(habref$LB_CODE %in% l)] }
)
)
l
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) { habref$CD_HAB[which(l %in% habref$LB_CODE)] }
)
)
View(hs2)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
print(l)
habref$CD_HAB[which(l %in% habref$LB_CODE)]
}
)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
print(l)
e <- habref$CD_HAB[which(l %in% habref$LB_CODE)]
print(e)
}
)
)
l <- hs$LB_CODE_etg
l
which(l %in% habref$LB_CODE)
View(habref)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
print(l)
habref$CD_HAB[which(l %>% paste0("$") %in% habref$LB_CODE)]
print(e)
}
)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
print(l)
habref$CD_HAB[which(l %>% paste0("$") %in% habref$LB_CODE)]
}
)
)
# séparation des LB_CODE en différents niveaux d'habitat
# (étage, géomorphologie, substrat, peuplement)
hs <- cc_nona %>%
mutate(
LB_CODE_geo = str_split(LB_CODE, "\\.") %>% lapply(pluck, 1) %>% unlist(),
LB_CODE_sub = str_split(LB_CODE, "-") %>% lapply(pluck, 1) %>% unlist(),
LB_CODE_etg = substr(LB_CODE, 1, 1)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
print(l)
habref$CD_HAB[which(l %>% paste0("$") %in% habref$LB_CODE)]
}
)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
(habref$CD_HAB[which(l %>% paste0("$") %in% habref$LB_CODE)])
}
)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
e <- habref$CD_HAB[which(l %>% paste0("$") %in% habref$LB_CODE)]
print(e)
}
)
)
l
l %>% paste0("$")
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
ll <- l %>% paste0("$")
habref$CD_HAB[which(ll %in% habref$LB_CODE)]
}
)
)
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[which(l %in% habref$LB_CODE)]
}
)
)
hs2
l
l
which(l %in% habref$LB_CODE)
habref$CD_HAB[which(habref$LB_CODE %in% l)]
habref$CD_HAB
l
habref$CD_HAB[which(habref$LB_CODE %in% unique(l))]
ll <- l %>% paste0("$")
grepl(ll, habref$LB_CODE)
which(grepl(ll, habref$LB_CODE))
table(grepl(ll, habref$LB_CODE))
habref$LB_CODE
habref$LB_CODE %>% lengths()
habref$LB_CODE %>% nchar()
habref$LB_CODE[habref$LB_CODE %>% nchar() == 1]
View(habref)
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv"),
sep = ";"
) %>%
filter(CD_TYPO == 108)
which(l %in% habref$LB_CODE)
# Import de HABREF
habref <- read.csv(
here("data", "raw", "hab", "HABREF_70.csv"),
sep = ";"
) %>%
filter(CD_TYPO == 108)
which(l %in% habref$LB_CODE)
l
habref$LB_CODE
match(l, habref$LB_CODE)
match(l, habref$LB_CODE) %>% table()
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[match(l, habref$LB_CODE)]
}
)
)
View(hs2)
paste("CD_HAB", c("geo", "sub", "etg"), sep = "_")
# ajout des CD_HAB pour chaque niveau d'habitat
hs2 <- hs %>%
cbind(
apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[match(l, habref$LB_CODE)]
}
), deparse.level = paste("CD_HAB", c("geo", "sub", "etg"), sep = "_")
)
names(hs)
names(hs2)
# ajout des CD_HAB pour chaque niveau d'habitat
cdhabs <- apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[match(l, habref$LB_CODE)]
}
paste("CD_HAB", c("geo", "sub", "etg"), sep = "_")
# ajout des CD_HAB pour chaque niveau d'habitat
cdhabs <- apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[match(l, habref$LB_CODE)]
}
)
cdhabs
# ajout des CD_HAB pour chaque niveau d'habitat
cdhabs <- apply(
hs[, c("LB_CODE_geo", "LB_CODE_sub", "LB_CODE_etg")],
2,
\(l) {
habref$CD_HAB[match(l, habref$LB_CODE)]
}
) %>%
as.data.frame()
names(cdhabs) <- paste("CD_HAB", c("geo", "sub", "etg"), sep = "_")
head(cdhabs)
hs2 <- hs %>% cbind(cdhabs)
View(has2)
View(hs2)
names(cdhabs)
names(hs2)
hs2 <- hs %>%
cbind(cdhabs) %>%
select(
"LC_CODEi", "STATION_REF", "LB_CODE", "CD_HAB", "LB_CODE_geo",
"CD_HAB_geo", "LB_CODE_sub", "CD_HAB_sub", "LB_CODE_etg", "CD_HAB_etg"
)
hs2 <- hs %>%
cbind(cdhabs) %>%
select(
"LB_CODEi", "STATION_REF", "LB_CODE", "CD_HAB", "LB_CODE_geo",
"CD_HAB_geo", "LB_CODE_sub", "CD_HAB_sub", "LB_CODE_etg", "CD_HAB_etg"
)
View(hs2)
